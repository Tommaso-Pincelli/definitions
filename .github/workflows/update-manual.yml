name: Generate Webpage

on: # push
  push:
    branches: [ main ]
  #pull_request:
  #  branches: [ main ]
  # if you would like to trigger manually the execution of this workflow (e.g. from the actions tab)
  #workflow_dispatch:
jobs:
  nexus-fairmat-manual-gen:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Python 3.9
        uses: actions/setup-python@v2        
        with:
          python-version: 3.9
          #persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal access token.
          #fetch-depth: 0 # otherwise, there would be errors pushing refs to the destination repository.
      - name: Update pip and install sphinx and required tools to create static HTML pages with sphinx
        uses: actions/checkout@v2
        run: |
          echo $GITHUB_WORKSPACE
          pip install --upgrade pip
          pip install lxml Sphinx sphinx_comments pyRestTable six      
      - name: Get the source repo, i.e. the NeXus-FAIRmat experimental, which has the rst source code
        # uses: actions/checkout@v2 instead?
        run: |
          cd $GITHUB_WORKSPACE
          mkdir -p source
          cd source
          ls $PWD
          git clone https://github.com/Tommaso-Pincelli/definitions.git
          #git clone git@github.com:Tommaso-Pincelli/definitions.git
          cd definitions
          make all
          cd $GITHUB_WORKSPACE  
      - name: Push to an another repository
        id: push_directory
        uses: mkuehbach/definitions.github.io@main
        env:
          API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
        with:
          source-directory: output/
          destination-github-username: 'mkuehbach'
          destination-repository-name: 'definitions.github.io'
          user-email: markus.kuehbach@rwth-aachen.de
          commit-message: See ORIGIN_COMMIT from $GITHUB_REF
          target-branch: main  

     #- name: Update HTML pages
     #   run: |
     #     source .venv_pelican/bin/activate
     #     cd ./oscovida/tools/pelican
     #     make publish
     # - name: Commit files
     #   run: |
     #     export PR_NO=$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")

     #     git add $PR_NO --all
     #     git commit -m "Generated preview for PR $PR_NO on $(date)" -a
     #     git push
     # - uses: mshick/add-pr-comment@v1
     #   with:
     #     message: "View web reports generated with this branch at
     #       [staging/${{ github.event.number }}/](https://oscovida.github.io/staging/${{ github.event.number }}/index.html)"
     #     repo-token: ${{ secrets.GITHUB_TOKEN }}
     #     repo-token-user-login: 'github-actions[bot]' # The user.login for temporary GitHub tokens
     #     allow-repeats: false # This is the default
